#### STEP 1 ####
nano webpod.yml
kubectl apply -f webpod.yml



apiVersion: v1
kind: Pod
metadata:
  name: webpod
  labels:
    app: web
spec:
  containers:
  - name: c1
    image: quay.io/whizlabs-redhat/nginxdemo
    securityContext:
      capabilities:
        add: ["NET_RAW"]


##### STEP 2 #####
nano networkpolicy.yml
kubectl apply -f networkpolicy.yml
kubectl get pods
kubectl get networkpolicy



apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-nginx-policy
spec:
  podSelector:
    matchLabels:
      app: web
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: db



Network Policies in Kubernetes enable administrators to define and enforce granular rules for incoming (ingress) and 
outgoing (egress) traffic among pods within a cluster. By utilizing pod selectors based on labels, administrators can 
precisely manage the flow of traffic, allowing for effective network segmentation and enhanced security. 
These policies can be defined in YAM  L or JSON format, providing a standardized and readable way to express desired 
network rules.
